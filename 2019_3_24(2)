常见环境变量: HOME SHELL
环境变量的全局特性:
  在子进程中获取继承于父进程的环境变量信息
  main(int argc,char *argu[],char*env[])参数获取
  extern char**environ; 全局变量获取
  char* getchar(count char* env_name)接口获取
程序地址空间
  内核空间->运行参数/环境变量->栈(从上往下),局部变量->共享区->堆(从下往上)->初始化全局数据->未初始化全局数据->代码段
  分页式内存管理
  虚拟地址空间:mm_struct{//内存描述符
    long int size
	code_start
	code_end
	data_start
	data_end
  }
  写时拷贝技术,节省资源,提高子进程创建效率
  代码段只读
  页表:记录虚拟地址和物理地址之间的映射关系,并对地址内存访问控制
  内存充分利用
  内存访问控制
  保持进程独立性
  main {
    fork()
	printf
  }
  初始:鸟哥的linux私房菜
系统:深入理解计算机系统
     操作系统精髓设计原理
	 linux操作系统设计原理
网络:
    图解HTTP协议
    tcp/ip协议详解卷一
//vfork基本认识:创建一个子进程,阻塞父进程
  子进程先运行,父进程等到子进程exit退出或者程序替换后,父进程才会运行
  否则,同时运行,因为父子进程公用虚拟地址空间会造成调用栈混乱,因此阻塞父进程
vfork子进程如果return退出.释放资源会导致父进程陷入混乱造成错误
进程终止:
  main函数中return,刷新缓冲区,释放资源,
  exit库函数  刷新缓冲区,释放资源,
  _exit系统调用接口  释放资源
  返回值:
     程序正常退出,结果符合预期
	 程序正常退出,结果符合预期
     异常退出
	 $? 查看进程退出返回值
	 perror 打印系统调用接口错误原因
	 strerror(error)将系统调用错误编号解释为字符串原因
进程等待:等待子进程退出
     为什么等待子进程退出?避免产生僵尸进程
         因为父进程不知道子进程什么时候退出,因此只能在子进程创建之后调用wait,进行进程等待
         因为调用wait就是一直在等待子进程的退出	 
	 wait接口是一个阻塞函数,功能是等待子进程退出,如果没有子进程退出一直等待直到有子进程退出
	     阻塞:为了完成某个功能发起调用,如果不具备完成条件,一直等待,直接报错返回
	     非阻塞:为了完成某个功能发起调用,如果不具备完成条件,直接报错返回
	     
	 
