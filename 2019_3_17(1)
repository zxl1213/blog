linux初识
目录命令：ls pwd mkdir rmdir rm cp mv cd
文件命令：touch cat tac more less head tail
压缩命令：zip/unzip gzip/gunzip bzip2/bunzip2 tar -cxvzjf
时间命令：cal date
匹配查找命令：grep find
其它：man su | >> > bc 
shell原理：命令行解释器；保护操作系统内核
                保护内核，用户与内核之间沟通的桥梁
权限：系统操作的权限：管理员/普通用户
文件权限：所有者/所属组/其它 可读/可写/可执行
权限表示：rwxrwxr-x   111111101  775
权限的相关命令：
实际权限=给定权限&（~umask）
umask   查看/设置权限掩码
作用：影响创建一个文件实际的默认权限
                777                 002
                653                 022
                110 101 011
                111 101 101
chmod   修改文件的权限
o-w针对某一类用户的权限进行增删
a+x
-x
0777 直接使用8进制数字权限设置
chown 修改文件所有者
    chown username  filename
chgrp  修改文件所属组
    chgrp  groupname filename
粘滞位  若一个目录设置粘滞位，那么目录将具有特点：
            其他用户都可以在目录中创建文件
            但其它用户不能删除别人的文件
useradd -w username
passwd username
userdel -r username

yum ：软件包管理工具
         软件安装方法
         1.手动源码安装
         2.使用工具安装
             工具自身可以解决软件包安装的依赖关系
          yum常用操作：
             查看
查看能够安装什么
yum list | grep pack_name
查看已经安装了什么
yum list installed | package_name
安装
yum install package_name
移除
yum remove package_name

vim:编辑器
       12种操作模式，但是常用的有三种
普通模式
插入模式
底行模式
模式切换
普通《=》插入：i a o I A O  ESC
普通《=》底行：：     ESC
底行：
q w wq q！
set nu
!pwd
/string ?string
普通模式：
光标移动
hjkl ctrl+f/d w/d gg G
复制
yy nyy
粘贴
p P
删除
x dw D dd ndd
撤销
u ctrl+r
其他
gg=G 
gcc/g++：编译器
   功能：将c/c++高级语言代码翻译成机器可识别代码
   编译过程：
预处理：展开所有代码
编译：语法语义纠错，翻译成汇编代码
汇编：将汇编代码翻译成二进制机器可识别指令
链接：链接库，将所有代码合成到一起生成可执行程序
库文件：已经汇编完成的公共代码
链接：将库中的代码拿到要生成的可执行程序中
静态链接：链接静态库，将库中的代码直接全部拷贝到可执行程序中，好处是程序执行时，不需要、依赖库文件的存在；缺点是占用资源较多
动态链接：链接动态库（共享库/运行时库），只是记录库中的接口符号位置信息，好处，资源占用冗余较小，缺点是程序运行时需要动态库的存在
gcc默认链接方式：动态链接
gdb：调试器
功能：调试一个程序的运行过程
linux下程序编译默认生成release版本程序，不带有调试符号信息，意味着程序无法被调试，所以程序调试的前提就是编译生成debug版本程序，因此gcc编译程序时需要加上-g选项，开始调试，向程序中添加调试符号信息
1.gcc -g main.c -o main
gdb调试程序，需要将程序信息，加载到gdb中
2.gdb ./main
gdb 进入gdb后 运行 file 。/main命令
开始调试：
运行程序加载运行参数
r param1 parma2 ...
start 开始逐步调试
n 下一步；并不跟踪进入函数
s  下一步；跟踪进入函数
p var  查看变量数据
l  line查看指定行（默认当前调试行）附近代码
until line 向当前调试文件指定行添加断点
b line 向当前调试文件指定行添加断点
b file：line指定文件指定行添加断点
b func 向函数添加断点
watch var 变量监控，给变量添加断点，当变量内容发生改变，停止
i b  查看所有断点信息
d id  删除指定断点，默认删除所有
 c  继续运行
bt  查看函数调用栈信息
make/makefile：项目自动化构建工具
makefile：定义编译规则的普通文件
make:是一个解释程序，解释执行makefile中定义的编译规则
执行make命令，这时候make程序会到当前目录下寻找makefile文件，解释其中的编译规则
如何编写makefile；编写规则：
通过目标与依赖对象最后一次修改时间，判断目标对象是否需要重新生成
make在makefile中只找第一个目标对象，为了生成这个目标对象，而执行命令，完毕之后直接退出（后面的对象都不会再生成了）
make在makefile中找出第一个对象，这时候如果这个对象的依赖对象不存在，则在后续编译规则中，寻找是否可以生成这个依赖对象，当所有依赖对象生成完毕后，最终生成目标对象

预定义变量
$@ 要生成  的目标对象
$^ 所有依赖对象
$< 依赖对象中的第一个
$()引用一个命令，获取执行结果
wildcard 获取文件名
patsubst 字符串替换 将src中的内容.c后缀替换成.o后缀
变量的使用需要使用$()括起来
.PHONY关键字用于声明伪对象，不管对象是不是最新，每次都要重新生成，声明谁是伪对象，谁就不用对比时间，直接执行，一般用来声明clean
git：项目版本管理工具
     svn，集成式版本管理工具
	 git，分布式版本管理工具
	 三板斧：
	     克隆代码
		    git clone git地址
		 添加本地分支  
		    git add 新文件
		 提交代码到本地仓库
		    git commit -m "本次提交代码备注"
		 提交本地代码到服务器分支
            git push origin master
