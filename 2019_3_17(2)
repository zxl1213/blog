Linux系统编程阶段
     进程概念，进程控制，进程间通讯，进程信号，多线程
     进程概念：
         冯诺依曼体系结构：
             冯诺依曼---奠定了现代计算机的硬件体系结构
			 现代计算机的五大硬件单元
			 输入设备：键盘
			 输出设备：显示器
			 存储器：内存
			 运算器：CPU
			 控制器：
			 硬件结构决定软件行为
	 操作系统：软件 
	     目的：让计算机更好用
		 功能：统筹管理计算机上的软硬件资源
		 如何管理：先描述，后组织
	 库函数和系统调用的关系：
	     上下级的调用关系，库函数就是对系统调用接口的一层封装
	 操作系统：搞管理的软件
	     对下管理软硬件资源，对上提供良好的执行环境
		 管理：先描述，再组织进行管理
	 进程概念：
         进程：进行中的程序
		 程序：一堆代码---在硬盘上面，程序运行起来，就会被加载到内存当中
		 操作系统管理进程：描述进程 PCB---struct task_struct{}(双向链表进行组织)
		     操作系统通过PCB来管理运行中的程序
		     描述信息：进程标识符（PID）,进程状态，优先级，程序计数器（存储即将执行指令），上下文数据(正在处理的数据)，记账信息（记录运行时间），内存指针，IO状态信息
		         cpu的分时机制：轮询调度进程
				 时间片：cpu在一个进程运行的时间
			 进程查看：/proc 进程运行信息存放目录   
			          ps -ef  -aux 查看系统上的进程信息
					  getpid（）获取调用进程的进程id			 
			 进程创建：pid_t fork（）通过复制调用进程，PCB，创建一个新的进程（子进程），子进程复制的就是父进程的pcb（父子进程数据，代码看都起来一样）
			         创建子进程的意义:压力分摊,完成其他的任务
				 如何分辨子进程:返回值
			         代码共享(子进程并非从头开始)，数据独有
					 返回值：
					 父进程返回的是子进程的pid,>0
					 子进程返回的是0
					 我们的程序因为父子进程代码运行一样，所以需要通过pid区分父子进程
					 
